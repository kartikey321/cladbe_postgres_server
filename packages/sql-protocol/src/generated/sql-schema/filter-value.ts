// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { BoolList } from '../sql-schema/bool-list.js';
import { BoolValue } from '../sql-schema/bool-value.js';
import { Float64List } from '../sql-schema/float64-list.js';
import { Int64List } from '../sql-schema/int64-list.js';
import { Int64Value } from '../sql-schema/int64-value.js';
import { NullValue } from '../sql-schema/null-value.js';
import { NumberValue } from '../sql-schema/number-value.js';
import { StringList } from '../sql-schema/string-list.js';
import { StringValue } from '../sql-schema/string-value.js';
import { TimestampValue } from '../sql-schema/timestamp-value.js';


export enum FilterValue {
  NONE = 0,
  StringValue = 1,
  NumberValue = 2,
  BoolValue = 3,
  NullValue = 4,
  Int64Value = 5,
  TimestampValue = 6,
  StringList = 7,
  Int64List = 8,
  Float64List = 9,
  BoolList = 10
}

export function unionToFilterValue(
  type: FilterValue,
  accessor: (obj:BoolList|BoolValue|Float64List|Int64List|Int64Value|NullValue|NumberValue|StringList|StringValue|TimestampValue) => BoolList|BoolValue|Float64List|Int64List|Int64Value|NullValue|NumberValue|StringList|StringValue|TimestampValue|null
): BoolList|BoolValue|Float64List|Int64List|Int64Value|NullValue|NumberValue|StringList|StringValue|TimestampValue|null {
  switch(FilterValue[type]) {
    case 'NONE': return null; 
    case 'StringValue': return accessor(new StringValue())! as StringValue;
    case 'NumberValue': return accessor(new NumberValue())! as NumberValue;
    case 'BoolValue': return accessor(new BoolValue())! as BoolValue;
    case 'NullValue': return accessor(new NullValue())! as NullValue;
    case 'Int64Value': return accessor(new Int64Value())! as Int64Value;
    case 'TimestampValue': return accessor(new TimestampValue())! as TimestampValue;
    case 'StringList': return accessor(new StringList())! as StringList;
    case 'Int64List': return accessor(new Int64List())! as Int64List;
    case 'Float64List': return accessor(new Float64List())! as Float64List;
    case 'BoolList': return accessor(new BoolList())! as BoolList;
    default: return null;
  }
}

export function unionListToFilterValue(
  type: FilterValue, 
  accessor: (index: number, obj:BoolList|BoolValue|Float64List|Int64List|Int64Value|NullValue|NumberValue|StringList|StringValue|TimestampValue) => BoolList|BoolValue|Float64List|Int64List|Int64Value|NullValue|NumberValue|StringList|StringValue|TimestampValue|null, 
  index: number
): BoolList|BoolValue|Float64List|Int64List|Int64Value|NullValue|NumberValue|StringList|StringValue|TimestampValue|null {
  switch(FilterValue[type]) {
    case 'NONE': return null; 
    case 'StringValue': return accessor(index, new StringValue())! as StringValue;
    case 'NumberValue': return accessor(index, new NumberValue())! as NumberValue;
    case 'BoolValue': return accessor(index, new BoolValue())! as BoolValue;
    case 'NullValue': return accessor(index, new NullValue())! as NullValue;
    case 'Int64Value': return accessor(index, new Int64Value())! as Int64Value;
    case 'TimestampValue': return accessor(index, new TimestampValue())! as TimestampValue;
    case 'StringList': return accessor(index, new StringList())! as StringList;
    case 'Int64List': return accessor(index, new Int64List())! as Int64List;
    case 'Float64List': return accessor(index, new Float64List())! as Float64List;
    case 'BoolList': return accessor(index, new BoolList())! as BoolList;
    default: return null;
  }
}
