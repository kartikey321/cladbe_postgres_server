// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { RpcMethod } from '../sql-rpc/rpc-method.js';
import { RpcPayload, unionToRpcPayload, unionListToRpcPayload } from '../sql-rpc/rpc-payload.js';


export class RequestEnvelope {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):RequestEnvelope {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsRequestEnvelope(bb:flatbuffers.ByteBuffer, obj?:RequestEnvelope):RequestEnvelope {
  return (obj || new RequestEnvelope()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsRequestEnvelope(bb:flatbuffers.ByteBuffer, obj?:RequestEnvelope):RequestEnvelope {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new RequestEnvelope()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

correlationId():string|null
correlationId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
correlationId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

replyTopic():string|null
replyTopic(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
replyTopic(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

method():RpcMethod {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : RpcMethod.GET_DATA;
}

payloadType():RpcPayload {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : RpcPayload.NONE;
}

payload<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startRequestEnvelope(builder:flatbuffers.Builder) {
  builder.startObject(5);
}

static addCorrelationId(builder:flatbuffers.Builder, correlationIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, correlationIdOffset, 0);
}

static addReplyTopic(builder:flatbuffers.Builder, replyTopicOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, replyTopicOffset, 0);
}

static addMethod(builder:flatbuffers.Builder, method:RpcMethod) {
  builder.addFieldInt8(2, method, RpcMethod.GET_DATA);
}

static addPayloadType(builder:flatbuffers.Builder, payloadType:RpcPayload) {
  builder.addFieldInt8(3, payloadType, RpcPayload.NONE);
}

static addPayload(builder:flatbuffers.Builder, payloadOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, payloadOffset, 0);
}

static endRequestEnvelope(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static finishRequestEnvelopeBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset);
}

static finishSizePrefixedRequestEnvelopeBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, undefined, true);
}

static createRequestEnvelope(builder:flatbuffers.Builder, correlationIdOffset:flatbuffers.Offset, replyTopicOffset:flatbuffers.Offset, method:RpcMethod, payloadType:RpcPayload, payloadOffset:flatbuffers.Offset):flatbuffers.Offset {
  RequestEnvelope.startRequestEnvelope(builder);
  RequestEnvelope.addCorrelationId(builder, correlationIdOffset);
  RequestEnvelope.addReplyTopic(builder, replyTopicOffset);
  RequestEnvelope.addMethod(builder, method);
  RequestEnvelope.addPayloadType(builder, payloadType);
  RequestEnvelope.addPayload(builder, payloadOffset);
  return RequestEnvelope.endRequestEnvelope(builder);
}
}
