"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.RpcPayload = void 0;
exports.unionToRpcPayload = unionToRpcPayload;
exports.unionListToRpcPayload = unionListToRpcPayload;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
const add_single_req_js_1 = require("../sql-rpc/add-single-req.js");
const create_table_req_js_1 = require("../sql-rpc/create-table-req.js");
const delete_row_req_js_1 = require("../sql-rpc/delete-row-req.js");
const get_data_req_js_1 = require("../sql-rpc/get-data-req.js");
const get_single_req_js_1 = require("../sql-rpc/get-single-req.js");
const run_aggregation_req_js_1 = require("../sql-rpc/run-aggregation-req.js");
const table_exists_req_js_1 = require("../sql-rpc/table-exists-req.js");
const update_single_req_js_1 = require("../sql-rpc/update-single-req.js");
var RpcPayload;
(function (RpcPayload) {
    RpcPayload[RpcPayload["NONE"] = 0] = "NONE";
    RpcPayload[RpcPayload["GetDataReq"] = 1] = "GetDataReq";
    RpcPayload[RpcPayload["GetSingleReq"] = 2] = "GetSingleReq";
    RpcPayload[RpcPayload["AddSingleReq"] = 3] = "AddSingleReq";
    RpcPayload[RpcPayload["UpdateSingleReq"] = 4] = "UpdateSingleReq";
    RpcPayload[RpcPayload["DeleteRowReq"] = 5] = "DeleteRowReq";
    RpcPayload[RpcPayload["CreateTableReq"] = 6] = "CreateTableReq";
    RpcPayload[RpcPayload["TableExistsReq"] = 7] = "TableExistsReq";
    RpcPayload[RpcPayload["RunAggregationReq"] = 8] = "RunAggregationReq";
})(RpcPayload || (exports.RpcPayload = RpcPayload = {}));
function unionToRpcPayload(type, accessor) {
    switch (RpcPayload[type]) {
        case 'NONE': return null;
        case 'GetDataReq': return accessor(new get_data_req_js_1.GetDataReq());
        case 'GetSingleReq': return accessor(new get_single_req_js_1.GetSingleReq());
        case 'AddSingleReq': return accessor(new add_single_req_js_1.AddSingleReq());
        case 'UpdateSingleReq': return accessor(new update_single_req_js_1.UpdateSingleReq());
        case 'DeleteRowReq': return accessor(new delete_row_req_js_1.DeleteRowReq());
        case 'CreateTableReq': return accessor(new create_table_req_js_1.CreateTableReq());
        case 'TableExistsReq': return accessor(new table_exists_req_js_1.TableExistsReq());
        case 'RunAggregationReq': return accessor(new run_aggregation_req_js_1.RunAggregationReq());
        default: return null;
    }
}
function unionListToRpcPayload(type, accessor, index) {
    switch (RpcPayload[type]) {
        case 'NONE': return null;
        case 'GetDataReq': return accessor(index, new get_data_req_js_1.GetDataReq());
        case 'GetSingleReq': return accessor(index, new get_single_req_js_1.GetSingleReq());
        case 'AddSingleReq': return accessor(index, new add_single_req_js_1.AddSingleReq());
        case 'UpdateSingleReq': return accessor(index, new update_single_req_js_1.UpdateSingleReq());
        case 'DeleteRowReq': return accessor(index, new delete_row_req_js_1.DeleteRowReq());
        case 'CreateTableReq': return accessor(index, new create_table_req_js_1.CreateTableReq());
        case 'TableExistsReq': return accessor(index, new table_exists_req_js_1.TableExistsReq());
        case 'RunAggregationReq': return accessor(index, new run_aggregation_req_js_1.RunAggregationReq());
        default: return null;
    }
}
