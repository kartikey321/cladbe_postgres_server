"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.RpcResponse = void 0;
exports.unionToRpcResponse = unionToRpcResponse;
exports.unionListToRpcResponse = unionListToRpcResponse;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
const agg_res_js_1 = require("../sql-rpc/agg-res.js");
const bool_res_js_1 = require("../sql-rpc/bool-res.js");
const row_json_js_1 = require("../sql-rpc/row-json.js");
const rows_json_js_1 = require("../sql-rpc/rows-json.js");
var RpcResponse;
(function (RpcResponse) {
    RpcResponse[RpcResponse["NONE"] = 0] = "NONE";
    RpcResponse[RpcResponse["RowsJson"] = 1] = "RowsJson";
    RpcResponse[RpcResponse["RowJson"] = 2] = "RowJson";
    RpcResponse[RpcResponse["BoolRes"] = 3] = "BoolRes";
    RpcResponse[RpcResponse["AggRes"] = 4] = "AggRes";
})(RpcResponse || (exports.RpcResponse = RpcResponse = {}));
function unionToRpcResponse(type, accessor) {
    switch (RpcResponse[type]) {
        case 'NONE': return null;
        case 'RowsJson': return accessor(new rows_json_js_1.RowsJson());
        case 'RowJson': return accessor(new row_json_js_1.RowJson());
        case 'BoolRes': return accessor(new bool_res_js_1.BoolRes());
        case 'AggRes': return accessor(new agg_res_js_1.AggRes());
        default: return null;
    }
}
function unionListToRpcResponse(type, accessor, index) {
    switch (RpcResponse[type]) {
        case 'NONE': return null;
        case 'RowsJson': return accessor(index, new rows_json_js_1.RowsJson());
        case 'RowJson': return accessor(index, new row_json_js_1.RowJson());
        case 'BoolRes': return accessor(index, new bool_res_js_1.BoolRes());
        case 'AggRes': return accessor(index, new agg_res_js_1.AggRes());
        default: return null;
    }
}
