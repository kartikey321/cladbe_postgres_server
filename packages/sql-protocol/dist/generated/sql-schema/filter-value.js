"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilterValue = void 0;
exports.unionToFilterValue = unionToFilterValue;
exports.unionListToFilterValue = unionListToFilterValue;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
const bool_list_js_1 = require("../sql-schema/bool-list.js");
const bool_value_js_1 = require("../sql-schema/bool-value.js");
const float64_list_js_1 = require("../sql-schema/float64-list.js");
const int64_list_js_1 = require("../sql-schema/int64-list.js");
const int64_value_js_1 = require("../sql-schema/int64-value.js");
const null_value_js_1 = require("../sql-schema/null-value.js");
const number_value_js_1 = require("../sql-schema/number-value.js");
const string_list_js_1 = require("../sql-schema/string-list.js");
const string_value_js_1 = require("../sql-schema/string-value.js");
const timestamp_value_js_1 = require("../sql-schema/timestamp-value.js");
var FilterValue;
(function (FilterValue) {
    FilterValue[FilterValue["NONE"] = 0] = "NONE";
    FilterValue[FilterValue["StringValue"] = 1] = "StringValue";
    FilterValue[FilterValue["NumberValue"] = 2] = "NumberValue";
    FilterValue[FilterValue["BoolValue"] = 3] = "BoolValue";
    FilterValue[FilterValue["NullValue"] = 4] = "NullValue";
    FilterValue[FilterValue["Int64Value"] = 5] = "Int64Value";
    FilterValue[FilterValue["TimestampValue"] = 6] = "TimestampValue";
    FilterValue[FilterValue["StringList"] = 7] = "StringList";
    FilterValue[FilterValue["Int64List"] = 8] = "Int64List";
    FilterValue[FilterValue["Float64List"] = 9] = "Float64List";
    FilterValue[FilterValue["BoolList"] = 10] = "BoolList";
})(FilterValue || (exports.FilterValue = FilterValue = {}));
function unionToFilterValue(type, accessor) {
    switch (FilterValue[type]) {
        case 'NONE': return null;
        case 'StringValue': return accessor(new string_value_js_1.StringValue());
        case 'NumberValue': return accessor(new number_value_js_1.NumberValue());
        case 'BoolValue': return accessor(new bool_value_js_1.BoolValue());
        case 'NullValue': return accessor(new null_value_js_1.NullValue());
        case 'Int64Value': return accessor(new int64_value_js_1.Int64Value());
        case 'TimestampValue': return accessor(new timestamp_value_js_1.TimestampValue());
        case 'StringList': return accessor(new string_list_js_1.StringList());
        case 'Int64List': return accessor(new int64_list_js_1.Int64List());
        case 'Float64List': return accessor(new float64_list_js_1.Float64List());
        case 'BoolList': return accessor(new bool_list_js_1.BoolList());
        default: return null;
    }
}
function unionListToFilterValue(type, accessor, index) {
    switch (FilterValue[type]) {
        case 'NONE': return null;
        case 'StringValue': return accessor(index, new string_value_js_1.StringValue());
        case 'NumberValue': return accessor(index, new number_value_js_1.NumberValue());
        case 'BoolValue': return accessor(index, new bool_value_js_1.BoolValue());
        case 'NullValue': return accessor(index, new null_value_js_1.NullValue());
        case 'Int64Value': return accessor(index, new int64_value_js_1.Int64Value());
        case 'TimestampValue': return accessor(index, new timestamp_value_js_1.TimestampValue());
        case 'StringList': return accessor(index, new string_list_js_1.StringList());
        case 'Int64List': return accessor(index, new int64_list_js_1.Int64List());
        case 'Float64List': return accessor(index, new float64_list_js_1.Float64List());
        case 'BoolList': return accessor(index, new bool_list_js_1.BoolList());
        default: return null;
    }
}
