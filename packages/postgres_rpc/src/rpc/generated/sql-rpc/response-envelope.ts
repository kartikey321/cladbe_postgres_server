// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { ErrorCode } from '../sql-rpc/error-code.js';
import { RpcResponse, unionToRpcResponse, unionListToRpcResponse } from '../sql-rpc/rpc-response.js';


export class ResponseEnvelope {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ResponseEnvelope {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsResponseEnvelope(bb:flatbuffers.ByteBuffer, obj?:ResponseEnvelope):ResponseEnvelope {
  return (obj || new ResponseEnvelope()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsResponseEnvelope(bb:flatbuffers.ByteBuffer, obj?:ResponseEnvelope):ResponseEnvelope {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ResponseEnvelope()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

correlationId():string|null
correlationId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
correlationId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

ok():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : true;
}

errorCode():ErrorCode {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : ErrorCode.NONE;
}

errorMessage():string|null
errorMessage(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
errorMessage(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

dataType():RpcResponse {
  const offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : RpcResponse.NONE;
}

data<T extends flatbuffers.Table>(obj:any):any|null {
  const offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;
}

static startResponseEnvelope(builder:flatbuffers.Builder) {
  builder.startObject(6);
}

static addCorrelationId(builder:flatbuffers.Builder, correlationIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, correlationIdOffset, 0);
}

static addOk(builder:flatbuffers.Builder, ok:boolean) {
  builder.addFieldInt8(1, +ok, +true);
}

static addErrorCode(builder:flatbuffers.Builder, errorCode:ErrorCode) {
  builder.addFieldInt8(2, errorCode, ErrorCode.NONE);
}

static addErrorMessage(builder:flatbuffers.Builder, errorMessageOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, errorMessageOffset, 0);
}

static addDataType(builder:flatbuffers.Builder, dataType:RpcResponse) {
  builder.addFieldInt8(4, dataType, RpcResponse.NONE);
}

static addData(builder:flatbuffers.Builder, dataOffset:flatbuffers.Offset) {
  builder.addFieldOffset(5, dataOffset, 0);
}

static endResponseEnvelope(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createResponseEnvelope(builder:flatbuffers.Builder, correlationIdOffset:flatbuffers.Offset, ok:boolean, errorCode:ErrorCode, errorMessageOffset:flatbuffers.Offset, dataType:RpcResponse, dataOffset:flatbuffers.Offset):flatbuffers.Offset {
  ResponseEnvelope.startResponseEnvelope(builder);
  ResponseEnvelope.addCorrelationId(builder, correlationIdOffset);
  ResponseEnvelope.addOk(builder, ok);
  ResponseEnvelope.addErrorCode(builder, errorCode);
  ResponseEnvelope.addErrorMessage(builder, errorMessageOffset);
  ResponseEnvelope.addDataType(builder, dataType);
  ResponseEnvelope.addData(builder, dataOffset);
  return ResponseEnvelope.endResponseEnvelope(builder);
}
}
