// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class AddSingleReq {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):AddSingleReq {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAddSingleReq(bb:flatbuffers.ByteBuffer, obj?:AddSingleReq):AddSingleReq {
  return (obj || new AddSingleReq()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAddSingleReq(bb:flatbuffers.ByteBuffer, obj?:AddSingleReq):AddSingleReq {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new AddSingleReq()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

companyId():string|null
companyId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
companyId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

tableName():string|null
tableName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
tableName(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

primaryKeyColumn():string|null
primaryKeyColumn(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
primaryKeyColumn(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

rowJson():string|null
rowJson(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
rowJson(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startAddSingleReq(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addCompanyId(builder:flatbuffers.Builder, companyIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, companyIdOffset, 0);
}

static addTableName(builder:flatbuffers.Builder, tableNameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, tableNameOffset, 0);
}

static addPrimaryKeyColumn(builder:flatbuffers.Builder, primaryKeyColumnOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, primaryKeyColumnOffset, 0);
}

static addRowJson(builder:flatbuffers.Builder, rowJsonOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, rowJsonOffset, 0);
}

static endAddSingleReq(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createAddSingleReq(builder:flatbuffers.Builder, companyIdOffset:flatbuffers.Offset, tableNameOffset:flatbuffers.Offset, primaryKeyColumnOffset:flatbuffers.Offset, rowJsonOffset:flatbuffers.Offset):flatbuffers.Offset {
  AddSingleReq.startAddSingleReq(builder);
  AddSingleReq.addCompanyId(builder, companyIdOffset);
  AddSingleReq.addTableName(builder, tableNameOffset);
  AddSingleReq.addPrimaryKeyColumn(builder, primaryKeyColumnOffset);
  AddSingleReq.addRowJson(builder, rowJsonOffset);
  return AddSingleReq.endAddSingleReq(builder);
}
}
