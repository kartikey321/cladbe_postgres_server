// automatically generated by the FlatBuffers compiler, do not modify
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
import * as flatbuffers from 'flatbuffers';
export class BoolRes {
    constructor() {
        this.bb = null;
        this.bb_pos = 0;
    }
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsBoolRes(bb, obj) {
        return (obj || new BoolRes()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsBoolRes(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new BoolRes()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    value() {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : false;
    }
    static startBoolRes(builder) {
        builder.startObject(1);
    }
    static addValue(builder, value) {
        builder.addFieldInt8(0, +value, +false);
    }
    static endBoolRes(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createBoolRes(builder, value) {
        BoolRes.startBoolRes(builder);
        BoolRes.addValue(builder, value);
        return BoolRes.endBoolRes(builder);
    }
}
