// automatically generated by the FlatBuffers compiler, do not modify
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
import * as flatbuffers from 'flatbuffers';
import { ErrorCode } from '../sql-rpc/error-code.js';
import { RpcResponse } from '../sql-rpc/rpc-response.js';
export class ResponseEnvelope {
    constructor() {
        this.bb = null;
        this.bb_pos = 0;
    }
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsResponseEnvelope(bb, obj) {
        return (obj || new ResponseEnvelope()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsResponseEnvelope(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new ResponseEnvelope()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    correlationId(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    ok() {
        const offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? !!this.bb.readInt8(this.bb_pos + offset) : true;
    }
    errorCode() {
        const offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? this.bb.readUint8(this.bb_pos + offset) : ErrorCode.NONE;
    }
    errorMessage(optionalEncoding) {
        const offset = this.bb.__offset(this.bb_pos, 10);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    }
    dataType() {
        const offset = this.bb.__offset(this.bb_pos, 12);
        return offset ? this.bb.readUint8(this.bb_pos + offset) : RpcResponse.NONE;
    }
    data(obj) {
        const offset = this.bb.__offset(this.bb_pos, 14);
        return offset ? this.bb.__union(obj, this.bb_pos + offset) : null;
    }
    static startResponseEnvelope(builder) {
        builder.startObject(6);
    }
    static addCorrelationId(builder, correlationIdOffset) {
        builder.addFieldOffset(0, correlationIdOffset, 0);
    }
    static addOk(builder, ok) {
        builder.addFieldInt8(1, +ok, +true);
    }
    static addErrorCode(builder, errorCode) {
        builder.addFieldInt8(2, errorCode, ErrorCode.NONE);
    }
    static addErrorMessage(builder, errorMessageOffset) {
        builder.addFieldOffset(3, errorMessageOffset, 0);
    }
    static addDataType(builder, dataType) {
        builder.addFieldInt8(4, dataType, RpcResponse.NONE);
    }
    static addData(builder, dataOffset) {
        builder.addFieldOffset(5, dataOffset, 0);
    }
    static endResponseEnvelope(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createResponseEnvelope(builder, correlationIdOffset, ok, errorCode, errorMessageOffset, dataType, dataOffset) {
        ResponseEnvelope.startResponseEnvelope(builder);
        ResponseEnvelope.addCorrelationId(builder, correlationIdOffset);
        ResponseEnvelope.addOk(builder, ok);
        ResponseEnvelope.addErrorCode(builder, errorCode);
        ResponseEnvelope.addErrorMessage(builder, errorMessageOffset);
        ResponseEnvelope.addDataType(builder, dataType);
        ResponseEnvelope.addData(builder, dataOffset);
        return ResponseEnvelope.endResponseEnvelope(builder);
    }
}
