// automatically generated by the FlatBuffers compiler, do not modify
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
import { BasicSqlDataFilter } from '../sql-schema/basic-sql-data-filter.js';
import { BasicSqlDataFilterWrapper } from '../sql-schema/basic-sql-data-filter-wrapper.js';
export var BasicSqlDataFilterUnion;
(function (BasicSqlDataFilterUnion) {
    BasicSqlDataFilterUnion[BasicSqlDataFilterUnion["NONE"] = 0] = "NONE";
    BasicSqlDataFilterUnion[BasicSqlDataFilterUnion["BasicSqlDataFilterWrapper"] = 1] = "BasicSqlDataFilterWrapper";
    BasicSqlDataFilterUnion[BasicSqlDataFilterUnion["BasicSqlDataFilter"] = 2] = "BasicSqlDataFilter";
})(BasicSqlDataFilterUnion || (BasicSqlDataFilterUnion = {}));
export function unionToBasicSqlDataFilterUnion(type, accessor) {
    switch (BasicSqlDataFilterUnion[type]) {
        case 'NONE': return null;
        case 'BasicSqlDataFilterWrapper': return accessor(new BasicSqlDataFilterWrapper());
        case 'BasicSqlDataFilter': return accessor(new BasicSqlDataFilter());
        default: return null;
    }
}
export function unionListToBasicSqlDataFilterUnion(type, accessor, index) {
    switch (BasicSqlDataFilterUnion[type]) {
        case 'NONE': return null;
        case 'BasicSqlDataFilterWrapper': return accessor(index, new BasicSqlDataFilterWrapper());
        case 'BasicSqlDataFilter': return accessor(index, new BasicSqlDataFilter());
        default: return null;
    }
}
