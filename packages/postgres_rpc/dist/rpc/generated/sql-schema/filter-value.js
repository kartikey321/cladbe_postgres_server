// automatically generated by the FlatBuffers compiler, do not modify
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
import { BoolList } from '../sql-schema/bool-list.js';
import { BoolValue } from '../sql-schema/bool-value.js';
import { Float64List } from '../sql-schema/float64-list.js';
import { Int64List } from '../sql-schema/int64-list.js';
import { Int64Value } from '../sql-schema/int64-value.js';
import { NullValue } from '../sql-schema/null-value.js';
import { NumberValue } from '../sql-schema/number-value.js';
import { StringList } from '../sql-schema/string-list.js';
import { StringValue } from '../sql-schema/string-value.js';
import { TimestampValue } from '../sql-schema/timestamp-value.js';
export var FilterValue;
(function (FilterValue) {
    FilterValue[FilterValue["NONE"] = 0] = "NONE";
    FilterValue[FilterValue["StringValue"] = 1] = "StringValue";
    FilterValue[FilterValue["NumberValue"] = 2] = "NumberValue";
    FilterValue[FilterValue["BoolValue"] = 3] = "BoolValue";
    FilterValue[FilterValue["NullValue"] = 4] = "NullValue";
    FilterValue[FilterValue["Int64Value"] = 5] = "Int64Value";
    FilterValue[FilterValue["TimestampValue"] = 6] = "TimestampValue";
    FilterValue[FilterValue["StringList"] = 7] = "StringList";
    FilterValue[FilterValue["Int64List"] = 8] = "Int64List";
    FilterValue[FilterValue["Float64List"] = 9] = "Float64List";
    FilterValue[FilterValue["BoolList"] = 10] = "BoolList";
})(FilterValue || (FilterValue = {}));
export function unionToFilterValue(type, accessor) {
    switch (FilterValue[type]) {
        case 'NONE': return null;
        case 'StringValue': return accessor(new StringValue());
        case 'NumberValue': return accessor(new NumberValue());
        case 'BoolValue': return accessor(new BoolValue());
        case 'NullValue': return accessor(new NullValue());
        case 'Int64Value': return accessor(new Int64Value());
        case 'TimestampValue': return accessor(new TimestampValue());
        case 'StringList': return accessor(new StringList());
        case 'Int64List': return accessor(new Int64List());
        case 'Float64List': return accessor(new Float64List());
        case 'BoolList': return accessor(new BoolList());
        default: return null;
    }
}
export function unionListToFilterValue(type, accessor, index) {
    switch (FilterValue[type]) {
        case 'NONE': return null;
        case 'StringValue': return accessor(index, new StringValue());
        case 'NumberValue': return accessor(index, new NumberValue());
        case 'BoolValue': return accessor(index, new BoolValue());
        case 'NullValue': return accessor(index, new NullValue());
        case 'Int64Value': return accessor(index, new Int64Value());
        case 'TimestampValue': return accessor(index, new TimestampValue());
        case 'StringList': return accessor(index, new StringList());
        case 'Int64List': return accessor(index, new Int64List());
        case 'Float64List': return accessor(index, new Float64List());
        case 'BoolList': return accessor(index, new BoolList());
        default: return null;
    }
}
