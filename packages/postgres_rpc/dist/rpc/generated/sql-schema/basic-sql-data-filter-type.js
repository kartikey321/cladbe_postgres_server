// automatically generated by the FlatBuffers compiler, do not modify
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
export var BasicSqlDataFilterType;
(function (BasicSqlDataFilterType) {
    BasicSqlDataFilterType[BasicSqlDataFilterType["equals"] = 0] = "equals";
    BasicSqlDataFilterType[BasicSqlDataFilterType["notEquals"] = 1] = "notEquals";
    BasicSqlDataFilterType[BasicSqlDataFilterType["lessThan"] = 2] = "lessThan";
    BasicSqlDataFilterType[BasicSqlDataFilterType["lessThanOrEquals"] = 3] = "lessThanOrEquals";
    BasicSqlDataFilterType[BasicSqlDataFilterType["greaterThan"] = 4] = "greaterThan";
    BasicSqlDataFilterType[BasicSqlDataFilterType["greaterThanOrEquals"] = 5] = "greaterThanOrEquals";
    BasicSqlDataFilterType[BasicSqlDataFilterType["isNull"] = 6] = "isNull";
    BasicSqlDataFilterType[BasicSqlDataFilterType["isNotNull"] = 7] = "isNotNull";
    BasicSqlDataFilterType[BasicSqlDataFilterType["regex"] = 8] = "regex";
    BasicSqlDataFilterType[BasicSqlDataFilterType["notRegex"] = 9] = "notRegex";
    BasicSqlDataFilterType[BasicSqlDataFilterType["startsWith"] = 10] = "startsWith";
    BasicSqlDataFilterType[BasicSqlDataFilterType["endsWith"] = 11] = "endsWith";
    BasicSqlDataFilterType[BasicSqlDataFilterType["contains"] = 12] = "contains";
    BasicSqlDataFilterType[BasicSqlDataFilterType["notContains"] = 13] = "notContains";
    BasicSqlDataFilterType[BasicSqlDataFilterType["arrayContains"] = 14] = "arrayContains";
    BasicSqlDataFilterType[BasicSqlDataFilterType["arrayContainedBy"] = 15] = "arrayContainedBy";
    BasicSqlDataFilterType[BasicSqlDataFilterType["arrayOverlaps"] = 16] = "arrayOverlaps";
    BasicSqlDataFilterType[BasicSqlDataFilterType["arrayEquals"] = 17] = "arrayEquals";
    BasicSqlDataFilterType[BasicSqlDataFilterType["arrayNotEquals"] = 18] = "arrayNotEquals";
    BasicSqlDataFilterType[BasicSqlDataFilterType["arrayEmpty"] = 19] = "arrayEmpty";
    BasicSqlDataFilterType[BasicSqlDataFilterType["arrayNotEmpty"] = 20] = "arrayNotEmpty";
    BasicSqlDataFilterType[BasicSqlDataFilterType["arrayLength"] = 21] = "arrayLength";
    BasicSqlDataFilterType[BasicSqlDataFilterType["jsonContains"] = 22] = "jsonContains";
    BasicSqlDataFilterType[BasicSqlDataFilterType["jsonContainedBy"] = 23] = "jsonContainedBy";
    BasicSqlDataFilterType[BasicSqlDataFilterType["jsonHasKey"] = 24] = "jsonHasKey";
    BasicSqlDataFilterType[BasicSqlDataFilterType["jsonHasAnyKey"] = 25] = "jsonHasAnyKey";
    BasicSqlDataFilterType[BasicSqlDataFilterType["jsonHasAllKeys"] = 26] = "jsonHasAllKeys";
    BasicSqlDataFilterType[BasicSqlDataFilterType["jsonGetField"] = 27] = "jsonGetField";
    BasicSqlDataFilterType[BasicSqlDataFilterType["jsonGetFieldAsText"] = 28] = "jsonGetFieldAsText";
    BasicSqlDataFilterType[BasicSqlDataFilterType["between"] = 29] = "between";
    BasicSqlDataFilterType[BasicSqlDataFilterType["notBetween"] = 30] = "notBetween";
    BasicSqlDataFilterType[BasicSqlDataFilterType["rangeContains"] = 31] = "rangeContains";
    BasicSqlDataFilterType[BasicSqlDataFilterType["rangeContainedBy"] = 32] = "rangeContainedBy";
    BasicSqlDataFilterType[BasicSqlDataFilterType["inList"] = 33] = "inList";
    BasicSqlDataFilterType[BasicSqlDataFilterType["notInList"] = 34] = "notInList";
})(BasicSqlDataFilterType || (BasicSqlDataFilterType = {}));
